-- CREACION DE TABALA

SHOW CREATE TABLE crypt;

CREATE TABLE `crypt` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pass` VARBINARY(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=INNODB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

-- CREACION DE REGISTROS ENCRIPTADOS

INSERT INTO crypt (id, pass,phrase) VALUES (NULL,AES_ENCRYPT('hola',UNHEX(SHA2('securitystring',512))),UNHEX(SHA2('securitystring',512)));
INSERT INTO crypt (id, pass,phrase) VALUES (NULL,AES_ENCRYPT('texto',UNHEX(SHA2('securitystring',512))),UNHEX(SHA2('securitystring',512)));
INSERT INTO crypt (id, pass,phrase) VALUES (NULL,AES_ENCRYPT('S3guro@',UNHEX(SHA2('securitystring',512))),UNHEX(SHA2('securitystring',512)));
INSERT INTO crypt (id, pass,phrase) VALUES (NULL,AES_ENCRYPT('C@ntraseNIa',UNHEX(SHA2('securitystring',512))),UNHEX(SHA2('securitystring',512)));


-- RECUPERACION DE REGISTRO ENCRIPTADO

SELECT AES_DECRYPT(pass,UNHEX(SHA2("securitystring",512))) AS "pass" FROM crypt WHERE id=5;

-- LLAMANDO FUNCION

SELECT DECRYPT_STR("securitystring",3);

-- CREANDO FUNCION PARA DESENCRIPTAR

DELIMITER $$
	-- DROP FUNCTION IF EXISTS DECRYPT_STR;
	CREATE FUNCTION DECRYPT_STR(
	PHRASE VARCHAR(255), 
	PID INT
	) RETURNS VARCHAR(255)
	DETERMINISTIC
	BEGIN
	  DECLARE RESULT VARCHAR(255) DEFAULT "";
	  SELECT AES_DECRYPT(pass,UNHEX(SHA2(PHRASE,512))) AS "PASS" INTO RESULT FROM crypt WHERE id=PID LIMIT 1;
	  RETURN (RESULT);
	END$$
DELIMITER ;





